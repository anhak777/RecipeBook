{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth.service.ts","./src/app/auth/store/auth.actions.ts","./src/app/auth/store/auth.effects.ts","./src/app/auth/store/auth.reducer.ts","./src/app/auth/user.model.ts","./src/app/core.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/logging.service.ts","./src/app/recipes/store/recipe.actions.ts","./src/app/recipes/store/recipe.effects.ts","./src/app/recipes/store/recipe.reducer.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/app/shared/placeholder/placeholder.directive.ts","./src/app/shared/shared.module.ts","./src/app/shopping-list/store/shopping-list.actions.ts","./src/app/shopping-list/store/shopping-list.reducer.ts","./src/app/store/app.reducer.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full'},\n  {\n    path: 'recipes',\n    loadChildren: () => import('./recipes/recipes.module').then(m => m.RecipesModule)\n  },\n  {\n    path: 'shopping-list',\n    loadChildren: () => import('./shopping-list/shopping-list.module').then(m => m.ShoppingListModule)\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules, initialNavigation: 'enabledBlocking' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Store } from '@ngrx/store';\nimport { LoggingService } from './logging.service';\nimport { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as fromApp from './store/app.reducer';\nimport * as AuthActions from './auth/store/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private store: Store<fromApp.AppState>,\n    private loggingService: LoggingService,\n    @Inject(PLATFORM_ID) private platformId\n  ) {}\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.store.dispatch(new AuthActions.AutoLogin());\n    }\n    this.store.dispatch(new AuthActions.AutoLogin());\n    this.loggingService.printlog('Hello from AppComponent ngOnInit');\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { CoreModule } from './core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport * as fromApp from './store/app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './auth/store/auth.effects';\nimport { RecipeEffects } from './recipes/store/recipe.effects';\nimport { environment } from 'src/environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    StoreModule.forRoot(fromApp.appReducer),\n    EffectsModule.forRoot([AuthEffects, RecipeEffects]),\n    StoreDevtoolsModule.instrument({logOnly: environment.production}),\n    StoreRouterConnectingModule.forRoot(),\n    SharedModule,\n    CoreModule,\n  ],\n  bootstrap: [AppComponent],\n  // providers: [LoggingService]\n})\nexport class AppModule { }\n","import { Store } from '@ngrx/store';\nimport { AuthService } from './auth.service';\nimport { HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { exhaustMap, map, take } from 'rxjs/operators';\nimport * as fromApp from '../store/app.reducer';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor( private store: Store<fromApp.AppState>) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return this.store.select('auth').pipe(\n      take(1),\n      map(authState => {\n        return authState.user;\n      }),\n      exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set('auth', user.token)\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from './store/auth.actions';\n\n// export interface AuthResponseData {\n//   kind?: string;\n//   idToken: string;\n//   email: string;\n//   refreshToken: string;\n//   expiresIn: string;\n//   localId: string;\n//   registered?: boolean;\n// }\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private tokenExpirationTimer: any;\n\n  constructor(\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  setLogoutTimer(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.store.dispatch(new AuthActions.Logout());\n    }, expirationDuration);\n  }\n\n  clearLogoutTimer() {\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n      this.tokenExpirationTimer = null;\n    }\n  }\n\n}\n","import { Action } from '@ngrx/store';\n\nexport const LOGIN_START = '[Auth] Login Start';\nexport const SIGNUP_START = '[Auth] Signup Start';\nexport const AUTHENTICATE_SUCCESS = '[Auth] Authenticate Success';\nexport const AUTHENTICATE_FAIL = '[Auth] Authenticate Fail';\nexport const CLEAR_ERROR = '[Auth] Clear Error';\nexport const AUTO_LOGIN = '[Auth] Auto Login';\nexport const LOGOUT = '[Auth] Logout';\n\nexport class LoginStart implements Action {\n  readonly type = LOGIN_START;\n\n  constructor(public payload: { email: string; password: string }) {}\n}\n\nexport class SignupStart implements Action {\n  readonly type = SIGNUP_START;\n\n  constructor(public payload: { email: string; password: string }) {}\n}\n\nexport class AuthenticateSuccess implements Action {\n  readonly type = AUTHENTICATE_SUCCESS;\n\n  constructor(\n    public payload: {\n      email: string;\n      userId: string;\n      token: string;\n      expirationDate: Date;\n      redirect: boolean;\n    }\n  ) {}\n}\n\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\nexport class ClearError implements Action {\n  readonly type = CLEAR_ERROR;\n}\n\nexport class AutoLogin implements Action {\n  readonly type = AUTO_LOGIN;\n}\n\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n}\n\nexport type AuthActions =\n  | LoginStart\n  | SignupStart\n  | AuthenticateSuccess\n  | AuthenticateFail\n  | ClearError\n  | AutoLogin\n  | Logout;\n","import { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect, Effect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap, catchError, map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as AuthActions from './auth.actions';\nimport { User } from '../user.model';\nimport { AuthService } from '../auth.service';\n\nexport interface AuthResponseData {\n  kind?: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\nconst handleAuthentication = (expiresIn: number, email: string, userId: string, token: string) => {\n  const expirationDate = new Date(\n    new Date().getTime() + expiresIn * 1000\n  );\n  const user = new User(email, userId, token, expirationDate);\n  localStorage.setItem('userData', JSON.stringify(user));\n  return new AuthActions.AuthenticateSuccess({\n      email: email,\n      userId: userId,\n      token: token,\n      expirationDate: expirationDate,\n      redirect: true\n    });\n}\n\nconst handleError = (errorRes: any)  => {\n  let errorMessage = 'An unknown error occurred!';\n    if (!errorRes.error || !errorRes.error.error) {\n      return of(new AuthActions.AuthenticateFail(errorMessage));\n    }\n    switch (errorRes.error.error.message) {\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This email already exists.';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = \"This email doesn't exists.\";\n        break;\n      case 'INVALID_PASSWORD':\n        errorMessage = \"This password isn't correct.\";\n        break;\n    }\n    return of(new AuthActions.AuthenticateFail(errorMessage));\n};\n\n@Injectable()\nexport class AuthEffects {\n  @Effect()\n  authSignup = this.actions$.pipe(\n    ofType(AuthActions.SIGNUP_START),\n    switchMap((signupAction: AuthActions.SignupStart) => {\n      return this.http\n      .post<AuthResponseData>(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' +\n          environment.firebaseAPIKey,\n        {\n          email: signupAction.payload.email,\n          password: signupAction.payload.password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        tap((resData) => {\n          this.auth.setLogoutTimer(+resData.expiresIn * 1000);\n        }),\n        map((resData) => {\n          return handleAuthentication(\n            +resData.expiresIn,\n            resData.email,\n            resData.localId,\n            resData.idToken\n          )\n        }),\n        catchError((errorRes) => {\n          return handleError(errorRes);\n        })\n      );\n    })\n  );\n\n  @Effect()\n  authLogin = this.actions$.pipe(\n    ofType(AuthActions.LOGIN_START),\n    switchMap((authData: AuthActions.LoginStart) => {\n      return this.http\n        .post<AuthResponseData>(\n          'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' +\n            environment.firebaseAPIKey,\n          {\n            email: authData.payload.email,\n            password: authData.payload.password,\n            returnSecureToken: true,\n          }\n        )\n        .pipe(\n          tap((resData) => {\n            this.auth.setLogoutTimer(+resData.expiresIn * 1000);\n          }),\n          map((resData) => {\n            return handleAuthentication(\n              +resData.expiresIn,\n              resData.email,\n              resData.localId,\n              resData.idToken\n            )\n          }),\n          catchError((errorRes) => {\n            return handleError(errorRes);\n          })\n        );\n    })\n  );\n\n  @Effect({dispatch: false})\n  authRedirect = this.actions$.pipe(\n    ofType(AuthActions.AUTHENTICATE_SUCCESS),\n    tap((authSuccessAction: AuthActions.AuthenticateSuccess) => {\n      if (authSuccessAction.payload.redirect) {\n        this.router.navigate(['/']);\n      }\n    })\n  );\n\n  // authSuccess = createEffect(() => {\n  //   return this.actions$.pipe(\n  //     ofType(AuthActions.LOGIN),\n  //     tap(() => {\n  //       this.router.navigate(['/']);\n  //     })\n  //   );\n  // })\n\n  @Effect()\n  autoLogin = this.actions$.pipe(\n    ofType(AuthActions.AUTO_LOGIN),\n    map(() => {\n      const userData: {\n        email: string;\n        id: string;\n        _token: string;\n        _tokenExpirationDate: Date;\n      } = JSON.parse(localStorage.getItem('userData'));\n      if (!userData) {\n        return { type: 'DUMMY' };\n      }\n\n      const loadedUser = new User(\n        userData.email,\n        userData.id,\n        userData._token,\n        new Date(userData._tokenExpirationDate)\n      );\n\n      if (loadedUser.token) {\n        const expirationDuration =\n          new Date(userData._tokenExpirationDate).getTime() -\n          new Date().getTime();\n        this.auth.setLogoutTimer(expirationDuration);\n        return new AuthActions.AuthenticateSuccess({\n          email: loadedUser.email,\n          userId: loadedUser.id,\n          token: loadedUser.token,\n          expirationDate: new Date(userData._tokenExpirationDate),\n          redirect: false\n        });\n\n        // const expirationDuration =\n        //   new Date(userData._tokenExpirationDate).getTime() -\n        //   new Date().getTime();\n        //   this.autoLogout(expirationDuration);\n      }\n      return { type: 'DUMMY' };\n    })\n  )\n\n\n  @Effect({dispatch: false})\n  authLogout = this.actions$.pipe(\n    ofType(AuthActions.LOGOUT),\n    tap(() => {\n      this.auth.clearLogoutTimer();\n      localStorage.removeItem('userData');\n      this.router.navigate(['/auth']);\n    })\n  )\n\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private router: Router,\n    private auth: AuthService\n  ) {}\n}\n","import { User } from './../user.model';\nimport * as AuthActions from './auth.actions';\n\nexport interface State {\n  user: User;\n  authError: string;\n  loading: boolean;\n  isAuthenticated: boolean;\n}\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  authError: null,\n};\n\nexport function authReducer(\n  state = initialState,\n  action: AuthActions.AuthActions\n) {\n  switch (action.type) {\n    case AuthActions.AUTHENTICATE_SUCCESS:\n      const user = new User(\n        action.payload.email,\n        action.payload.userId,\n        action.payload.token,\n        action.payload.expirationDate\n      );\n      return {\n        ...state,\n        user: user,\n        isAuthenticated: true,\n        authError: null,\n        loading: false\n      }\n    case AuthActions.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        authError: null,\n        loading: false\n      };\n    case AuthActions.LOGIN_START:\n    case AuthActions.SIGNUP_START:\n      return {\n        ...state,\n        authError: null,\n        loading: true\n      };\n    case AuthActions.AUTHENTICATE_FAIL:\n      return {\n        ...state,\n        authError: action.payload,\n        loading: false\n      }\n    case AuthActions.CLEAR_ERROR:\n      return {\n        ...state,\n        authError: null\n      }\n    default:\n      return state;\n  }\n}\n","export class User {\n  constructor (\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) { }\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { AuthInterceptorService } from \"./auth/auth-interceptor.service\";\n\n@NgModule({\n  providers: [\n    // ShoppingListService,  // no needed anymore, after adding shopping-list redusers (ngrx)\n    // RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {}\n","import { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from '../auth/store/auth.actions';\nimport * as RecipesActions from '../recipes/store/recipe.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuthenticated: boolean = false;\n  private userSub!: Subscription;\n\n  constructor(\n    private store: Store<fromApp.AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.userSub = this.store.select('auth').pipe(map(authState => authState.user)).subscribe(user => {\n      this.isAuthenticated = !!user;  // this is the same - !user ? false : true\n      console.log(!user);\n      console.log(!!user);\n    });\n  }\n\n  onSaveData() {\n    // this.DataStorageService.storeRecipes();\n    this.store.dispatch(new RecipesActions.StoreRecipes());\n  }\n\n  onFetchData() {\n    // this.DataStorageService.fetchRecipes().subscribe();\n    this.store.dispatch(new RecipesActions.FetchRecipes());\n  }\n\n  onLogOut() {\n    // this.authService.logout();\n    this.store.dispatch(new AuthActions.Logout());\n\n  }\n\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\n        </div>\n\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav\">\n                <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated\">\n                  <a routerLink=\"/recipes\">Recipes</a>\n                </li>\n                <li routerLinkActive=\"active\" *ngIf=\"!isAuthenticated\">\n                  <a routerLink=\"/auth\">Authenticate</a>\n                </li>\n                <li routerLinkActive=\"active\">\n                  <a routerLink=\"/shopping-list\">Shopping List</a>\n                </li>\n            </ul>\n            <ul class=\"nav navbar-nav navbar-right\">\n              <li *ngIf=\"isAuthenticated\">\n                <a style=\"cursor: pointer;\" (click)=\"onLogOut()\">Logout</a>\n              </li>\n                <li class=\"dropdown\" appDropdown *ngIf=\"isAuthenticated\">\n                    <a style=\"cursor: pointer;\" class=\"dropdown-toggle\" role=\"button\">Manage <span class=\"caret\"></span></a>\n                    <ul class=\"dropdown-menu\">\n                       <li><a style=\"cursor: pointer;\" (click)=\"onSaveData()\">Save Data</a></li>\n                       <li><a style=\"cursor: pointer;\" (click)=\"onFetchData()\">Fetch Data</a></li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: 'root' })\nexport class LoggingService {\n  lastlog: string;\n  printlog(message: string) {\n    console.log(message);\n    console.log(this.lastlog);\n    this.lastlog = message;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Recipe } from '../recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AddRecipe implements Action {\n  readonly type = ADD_RECIPE;\n\n  constructor(public payload: Recipe) {}\n}\n\nexport class UpdateRecipe implements Action {\n  readonly type = UPDATE_RECIPE;\n\n  constructor(public payload: { index: number, newRecipe: Recipe[] }) {}\n}\n\nexport class DeleteRecipe implements Action {\n  readonly type = DELETE_RECIPE;\n\n  constructor(public payload: number) {}\n}\n\nexport class StoreRecipes implements Action {\n  readonly type = STORE_RECIPES;\n}\n\n\nexport type RecipesActions = SetRecipes | FetchRecipes | AddRecipe | UpdateRecipe | DeleteRecipe | StoreRecipes;\n","import { Store } from '@ngrx/store';\nimport { HttpClient } from '@angular/common/http';\nimport { switchMap, map, withLatestFrom } from 'rxjs/operators';\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport * as RecipesActions from \"./recipe.actions\";\nimport { Recipe } from '../recipe.model';\nimport { Injectable } from '@angular/core';\nimport * as fromApp from '../../store/app.reducer';\n\n@Injectable()\nexport class RecipeEffects {\n  @Effect()\n  fetchRecipes = this.actions$.pipe(ofType(RecipesActions.FETCH_RECIPES),\n  switchMap(() => {\n    return this.http.get<Recipe[]>(\n      'https://recipe-book-ce84b-default-rtdb.firebaseio.com/recipes.json'\n    )\n  }),\n  map(recipes => {\n    return new RecipesActions.SetRecipes(recipes);\n  })\n  );\n\n  @Effect({dispatch: false})\n  storeRecipes = this.actions$.pipe(ofType(RecipesActions.STORE_RECIPES),\n  withLatestFrom(this.store.select('recipes')),\n  switchMap(([actionData, recipesState]) => {\n    return this.http.put(\n      'https://recipe-book-ce84b-default-rtdb.firebaseio.com/recipes.json',\n      recipesState.recipes\n    )}\n  ));\n\n  constructor(private actions$: Actions, private http: HttpClient, private store:Store<fromApp.AppState>) {}\n\n}\n","import { Recipe } from \"../recipe.model\";\nimport * as RecipesActions from './recipe.actions'\n\nexport interface State {\n  recipes: Recipe[];\n}\n\nconst initialState: State = {\n  recipes: []\n}\n\nexport function recipeReducer(state = initialState, action: RecipesActions.RecipesActions) {\n  switch (action.type) {\n    case RecipesActions.SET_RECIPES:\n      return {\n        ...state,\n        recipes: [...action.payload]\n      }\n    case RecipesActions.ADD_RECIPE:\n      return {\n        ...state,\n        recipes: [...state.recipes, action.payload]\n      }\n    case RecipesActions.UPDATE_RECIPE:\n      const updatedRecipes = {\n        ...state.recipes[action.payload.index],\n        ...action.payload.newRecipe\n      };\n      const updatedRecipesList = [...state.recipes];\n      updatedRecipesList[action.payload.index] = updatedRecipes;\n      return {\n        ...state,\n        recipes: updatedRecipes\n      }\n    case RecipesActions.DELETE_RECIPE:\n      return {\n        ...state,\n        recipes: state.recipes.filter((recipe, index) => {\n          return index !== action.payload;\n        })\n      }\n    default:\n      return state;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"app-alert\",\n  templateUrl: \"./alert.component.html\",\n  styleUrls: [\"./alert.component.scss\"]\n})\nexport class AlertComponent {\n  @Input() message: string;\n  @Output() close = new EventEmitter<void>();\n\n  onClose() {\n    this.close.emit();\n  }\n}\n","<div class=\"backdrop\" (click)=\"onClose()\"></div>\n<div class=\"alert-box\">\n  <p>{{ message }}</p>\n  <div class=\"alert-box-actions\">\n    <button class=\"btn btn-primary\" (click)=\"onClose()\">Close</button>\n  </div>\n</div>\n","import { Directive, HostBinding, HostListener } from \"@angular/core\";\n\n@Directive({\n    selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n    @HostBinding('class.open') isOpen = false;\n    @HostListener('click') toggleOpen() {\n        this.isOpen = !this.isOpen;\n    }\n}","export class Ingredient {\n    constructor(public name: string, public amount: number) {}\n}","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-loading-spinner',\n  template: '<div class=\"lds-circle\"><div></div></div>',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent {}\n","import { Directive, ViewContainerRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appPlaceholder]\"\n})\nexport class PlaceholderDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { LoggingService } from './../logging.service';\nimport { CommonModule } from '@angular/common';\nimport { DropdownDirective } from './dropdown.directive';\nimport { PlaceholderDirective } from './placeholder/placeholder.directive';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\nimport { AlertComponent } from './alert/alert.component';\nimport { NgModule } from \"@angular/core\";\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective,\n    CommonModule\n  ],\n  entryComponents: [AlertComponent],\n  providers: [LoggingService],\n})\nexport class SharedModule {\n\n}\n","import { Action } from '@ngrx/store';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\n\nexport const ADD_INGREDIENT = '[Shopping List] Add Ingredient';\nexport const ADD_INGREDIENTS = '[Shopping List] Add Ingredients';\nexport const UPDATE_INGREDIENT = '[Shopping List] Update Ingredient';\nexport const DELETE_INGREDIENT = '[Shopping List] Delete Ingredient';\nexport const START_EDIT = '[Shopping List] Start Edit';\nexport const STOP_EDIT = '[Shopping List] Stop Edit';\n\nexport class AddIngredient implements Action {\n  readonly type = ADD_INGREDIENT;\n\n  constructor(public payload: Ingredient) {}\n}\n\nexport class AddIngredients implements Action {\n  readonly type = ADD_INGREDIENTS;\n\n  constructor(public payload: Ingredient[]) {}\n}\n\nexport class UpdateIngredient implements Action {\n  readonly type = UPDATE_INGREDIENT;\n\n  constructor(public payload: Ingredient) {}\n}\n\nexport class DeleteIngredient implements Action {\n  readonly type = DELETE_INGREDIENT;\n}\n\nexport class StartEdit implements Action {\n  readonly type = START_EDIT;\n\n  constructor(public payload: number) {}\n}\n\nexport class StopEdit implements Action {\n  readonly type = STOP_EDIT;\n\n  constructor() {}\n}\n\nexport type ShoppingListActions =\n  | AddIngredient\n  | AddIngredients\n  | UpdateIngredient\n  | DeleteIngredient\n  | StartEdit\n  | StopEdit;\n","import { Ingredient } from \"../../shared/ingredient.model\";\nimport * as ShoppingListActions from \"./shopping-list.actions\";\n\nexport interface State {\n  ingredients: Ingredient[];\n  editedIngredient: Ingredient;\n  editedIngredientIndex: number;\n}\n\nconst initialState: State = {\n  ingredients: [\n    new Ingredient('Apples', 5),\n    new Ingredient('Tomatoes', 10),\n  ],\n  editedIngredient: null,\n  editedIngredientIndex: -1\n}\n\n\nexport function shoppingListReducer(state: State = initialState, action: ShoppingListActions.ShoppingListActions) {\n  switch (action.type) {\n    case ShoppingListActions.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: [...state.ingredients, action.payload]\n      }\n    case ShoppingListActions.ADD_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: [...state.ingredients, ...action.payload]\n      }\n    case ShoppingListActions.UPDATE_INGREDIENT:\n      const ingredient = state.ingredients[state.editedIngredientIndex];\n      const updatedIngredient = {\n        ...ingredient,\n        ...action.payload\n      }\n      const updatedIngredients = [...state.ingredients];\n      updatedIngredients[state.editedIngredientIndex] = updatedIngredient;\n\n      return {\n        ...state,\n        ingredients: updatedIngredients,\n        editedIngredientIndex: -1,\n        editedIngredient: null\n      };\n    case ShoppingListActions.DELETE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: state.ingredients.filter((ig, igIndex) => {\n          return igIndex !== state.editedIngredientIndex;\n        }),\n        editedIngredientIndex: -1,\n        editedIngredient: null\n      };\n    case ShoppingListActions.START_EDIT:\n      return {\n        ...state,\n        editedIngredientIndex: action.payload,\n        editedIngredient: { ...state.ingredients[action.payload] }\n      }\n    case ShoppingListActions.STOP_EDIT:\n      return {\n        ...state,\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      }\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\n\nimport * as fromShoppingList from '../shopping-list/store/shopping-list.reducer';\nimport * as fromAuth from '../auth/store/auth.reducer';\nimport * as fromRecipes from '../recipes/store/recipe.reducer';\n\nexport interface AppState {\n  shoppingList: fromShoppingList.State;\n  auth: fromAuth.State;\n  recipes: fromRecipes.State;\n}\n\nexport const appReducer: ActionReducerMap <AppState> = {\n  shoppingList: fromShoppingList.shoppingListReducer,\n  auth: fromAuth.authReducer,\n  recipes: fromRecipes.recipeReducer\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseAPIKey: 'AIzaSyDxkvLWruusRFjvrlQ_eEogVgRjNasVjKo'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}