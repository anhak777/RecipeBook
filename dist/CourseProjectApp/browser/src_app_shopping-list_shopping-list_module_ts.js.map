{"version":3,"file":"src_app_shopping-list_shopping-list_module_ts.js","mappings":"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","sources":["./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/shopping-list/shopping-list.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport * as ShoppingListActions from '../store/shopping-list.actions';\nimport * as fromApp from '../../store/app.reducer';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.scss'],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) slForm!: NgForm;\n  subscribtion!: Subscription;\n  editMode = false;\n  editedItem!: Ingredient;\n\n  constructor(\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribtion = this.store.select('shoppingList').subscribe(stateData => {\n      if (stateData.editedIngredientIndex > -1) {\n        this.editMode = true;\n        this.editedItem = stateData.editedIngredient;\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount,\n        });\n      } else {\n        this.editMode = false;\n      }\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      this.store.dispatch(\n        new ShoppingListActions.UpdateIngredient(newIngredient)\n      );\n    } else {\n      this.store.dispatch(new ShoppingListActions.AddIngredient(newIngredient));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n\n  onDelete() {\n    this.store.dispatch(\n      new ShoppingListActions.DeleteIngredient()\n    );\n    this.onClear();\n  }\n\n  ngOnDestroy(): void {\n    this.subscribtion.unsubscribe();\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-sm-5 form-group\">\n                    <label for=\"name\">Name</label>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        class=\"form-control\"\n                        name=\"name\"\n                        ngModel\n                        required>\n                </div>\n                <div class=\"col-sm-2 form-group\">\n                    <label for=\"amount\">Amount</label>\n                    <input \n                        type=\"number\" \n                        id=\"amount\" \n                        class=\"form-control\"\n                        name=\"amount\"\n                        ngModel\n                        required\n                        pattern=\"^[1-9]+[0-9]*$\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                        class=\"btn btn-success\" \n                        type=\"submit\" \n                        [disabled]=\"!f.valid\">{{ editMode ? 'Update' : 'Add' }}</button>\n                    <button \n                        class=\"btn btn-danger\" \n                        type=\"button\" \n                        (click)=\"onDelete()\"\n                        *ngIf=\"editMode\">Delete</button>\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { LoggingService } from '../logging.service';\nimport { Ingredient } from '../shared/ingredient.model';\nimport * as ShoppingListActions from './store/shopping-list.actions';\nimport * as fromApp from '../store/app.reducer';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.scss'],\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients!: Observable<{ ingredients: Ingredient[] }>;\n  private igChangeSub!: Subscription;\n\n  constructor(\n    private loggingService: LoggingService,\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.store.select('shoppingList');\n    this.store.select('shoppingList').subscribe();\n\n    this.loggingService.printlog('Hello from ShoppingListComponent ngOnInit');\n  }\n\n  onEditItem(index: number) {\n    this.store.dispatch(new ShoppingListActions.StartEdit(index))\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-10\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr>\n        <ul class=\"list-group\">\n            <a\n                class=\"list-group-item\"\n                style=\"cursor: pointer\"\n                *ngFor=\"let ingredient of (ingredients | async).ingredients; let i = index\"\n                (click)=\"onEditItem(i)\"\n            >\n            {{ ingredient.name }} ({{ ingredient.amount }})\n            </a>\n        </ul>\n    </div>\n</div>\n","import { LoggingService } from './../logging.service';\nimport { SharedModule } from './../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from \"@angular/core\";\nimport { ShoppingEditComponent } from \"./shopping-edit/shopping-edit.component\";\nimport { ShoppingListComponent } from \"./shopping-list.component\";\n\n@NgModule({\n  declarations: [\n    ShoppingListComponent,\n    ShoppingEditComponent\n  ],\n  imports: [\n    FormsModule,\n    RouterModule.forChild([\n      { path: '', component: ShoppingListComponent}\n    ]),\n    SharedModule\n  ],\n  // providers: [LoggingService]\n})\nexport class ShoppingListModule {}\n"],"names":["ShoppingListActions","i0","ctx_r3","ShoppingListComponent","constructor","loggingService","store","ngOnInit","ingredients","select","subscribe","printlog","onEditItem","index","dispatch","StartEdit","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}