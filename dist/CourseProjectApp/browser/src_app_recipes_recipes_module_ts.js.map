{"version":3,"file":"src_app_recipes_recipes_module_ts.js","mappings":"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","sources":["./src/app/auth/auth.guard.ts","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipes-resolver.service.ts","./src/app/recipes/recipes-routing.module.ts","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipes.module.ts"],"sourcesContent":["import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map, take } from \"rxjs/operators\";\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private store: Store<fromApp.AppState>) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | UrlTree | Observable<boolean|UrlTree> | Promise<boolean|UrlTree> {\n    return this.store.select('auth').pipe(\n      take(1),\n      map(authState => {\n        return authState.user;\n      }),\n      map(user => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n\n}\n","import { Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport * as fromApp from '../../store/app.reducer';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as RecipesActions from '../../recipes/store/recipe.actions';\nimport * as ShoppingListActions from '../../shopping-list/store/shopping-list.actions';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.scss']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n  recipe!: Recipe;\n  id!: number;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private store: Store<fromApp.AppState>) {}\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(map(params => {\n        return +params['id'];\n      }), switchMap(id => {\n        this.id = id;\n        return this.store.select('recipes');\n      }),\n      map(recipesState => {\n        return recipesState.recipes.find((recipe, index) => {\n          return index === this.id;\n        })\n      }))\n      .subscribe(recipe => {\n        this.recipe = recipe;\n      })\n  }\n\n  onAddToShoppingList() {\n    // this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n    this.store.dispatch(new ShoppingListActions.AddIngredients(this.recipe.ingredients));\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], {relativeTo: this.route});\n  }\n\n  onDeleteRecipe() {\n    // this.recipeService.deleteRecipe(this.id);\n    this.store.dispatch(new RecipesActions.DeleteRecipe(this.id));\n    this.router.navigate(['/recipes']);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <img \n            [src]=\"recipe.imagePath\" \n            alt=\"{{ recipe.name }}\" \n            class=\"img-responsive\"\n            style=\"max-height: 300px;\">\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1>{{ recipe.name }}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div \n            class=\"btn-group\"\n            appDropdown>\n            <button \n                type=\"button\" \n                class=\"btn btn-primary dropdown-toggle\">\n                Manage Recipe <span class=\"caret\"></span>\n            </button>\n            <ul class=\"dropdown-menu\">\n                <li><a (click)=\"onAddToShoppingList()\" style=\"cursor: pointer;\">To Shopping List</a></li>\n                <li><a style=\"cursor: pointer;\" (click)=\"onEditRecipe()\">Edit Recipe</a></li>\n                <li><a style=\"cursor: pointer;\" (click)=\"onDeleteRecipe()\" >Delete Recipe</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        {{ recipe.description }}\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <ul class=\"list-group\">\n            <li \n                class=\"list-group-item\"\n                *ngFor = \"let ingredient of recipe.ingredients\">\n                {{ ingredient.name }} - {{ ingredient.amount }}\n            </li>\n        </ul>\n    </div>\n</div>","import { Store } from '@ngrx/store';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport * as fromApp from '../../store/app.reducer';\nimport * as RecipesActions from  '../store/recipe.actions';\n\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.scss']\n})\nexport class RecipeEditComponent implements OnInit, OnDestroy {\n\n  id!: number;\n  editMode: boolean = false;\n  recipeForm!: FormGroup;\n\n  private storeSub: Subscription;\n\n  get ingredientsControls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private store: Store<fromApp.AppState>) { }\n\n  ngOnInit(): void {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.initForm();\n        }\n      )\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  onSubmit() {\n    if(this.editMode) {\n      // this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      this.store.dispatch(new RecipesActions.UpdateRecipe({index: this.id, newRecipe: this.recipeForm.value}));\n    }\n    else {\n      // this.recipeService.addRecipe(this.recipeForm.value);\n      this.store.dispatch(new RecipesActions.AddRecipe(this.recipeForm.value));\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)\n        ])\n      })\n    )\n  }\n\n  ngOnDestroy(): void {\n    if(this.storeSub) {\n      this.storeSub.unsubscribe();\n    }\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      // const recipe = this.recipeService.getRecipe(this.id);\n      this.storeSub = this.store.select('recipes').pipe(map(recipeState => {\n        return recipeState.recipes.find((recipe, index) => {\n          return index === this.id;\n        })\n      }))\n      .subscribe(recipe => {\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n        if(recipe['ingredients']) {\n          for (let ingredient of recipe.ingredients) {\n            recipeIngredients.push(\n              new FormGroup({\n                'name': new FormControl(ingredient.name, Validators.required),\n                'amount': new FormControl(ingredient.amount, [\n                  Validators.required,\n                  Validators.pattern(/^[1-9]+[0-9]*$/)\n                ])\n              })\n            );\n          }\n        }\n      })\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button\n                        type=\"submit\"\n                        class=\"btn btn-success\"\n                        [disabled]=\"!recipeForm.valid\">Save</button>\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            formControlName=\"name\"\n                            class=\"form-control\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"imagePath\">Image URL</label>\n                        <input\n                            type=\"text\"\n                            id=\"imagePath\"\n                            formControlName=\"imagePath\"\n                            class=\"form-control\"\n                            #imagePath>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <img [src]=\"imagePath.value\" class=\"img-responsive\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea\n                            type=\"text\"\n                            id=\"description\"\n                            class=\"form-control\"\n                            formControlName=\"description\"\n                            rows=\"6\"></textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n                    <div\n                        class=\"row\"\n                        *ngFor=\"let ingredinetCtrl of ingredientsControls; let i = index\"\n                        [formGroupName]=\"i\"\n                        style=\"margin-top: 10px;\">\n                        <div class=\"col-xs-8\">\n                            <input\n                            type=\"text\"\n                            class=\"form-control\"\n                            formControlName=\"name\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <input\n                            type=\"number\"\n                            class=\"form-control\"\n                            formControlName=\"amount\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-danger\"\n                                (click)=\"onDeleteIngredient(i)\">x</button>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-success\"\n                                (click)=\"onAddIngredient()\">Add Ingredient</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.scss']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  @Input() recipe!: Recipe;\n  @Input() index!: number;\n\n  ngOnInit(): void {\n  }\n\n}\n","<a\n    data-aos=\"fade-right\" data-aos-delay=\"10\" data-aos-easing=\"new-easing\"\n    style=\"cursor: pointer;\"\n    [routerLink]=\"[index]\"\n    routerLinkActive=\"active\"\n    class=\"list-group-item clearfix\" >\n    <div class=\"pull-left\" data-aos=\"fade-right\" data-aos-delay=\"700\">\n        <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n        <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n    </div>\n    <span class=\"pull-right\" data-aos=\"fade-left\" data-aos-delay=\"300\">\n        <img\n            [src]=\"recipe.imagePath\"\n            alt=\"{{ recipe.name }}\"\n            class=\"img-responsive\"\n            style=\"max-height: 50px;\">\n    </span>\n</a>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nimport { Recipe } from '../recipe.model';\nimport * as fromApp from '../../store/app.reducer';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.scss']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n\n  recipes!: Recipe[];\n  subscription!: Subscription;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private store: Store<fromApp.AppState>) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.store.select('recipes')\n    .pipe(map(recipesState => recipesState.recipes))\n      .subscribe(\n        (recipes: Recipe[]) => {\n          this.recipes = recipes;\n        }\n      );\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], {relativeTo: this.route});\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <button class=\"btn btn-success\" (click)=\"onNewRecipe()\">New Recipe</button>\n    </div>\n</div>\n<hr>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <app-recipe-item\n        *ngFor=\"let recipeEl of recipes; let i = index\"\n        [recipe]=\"recipeEl\"\n        [index]=\"i\"></app-recipe-item>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.scss']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a Recipe!</h3>\n","import { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\n\nimport { Ingredient } from '../shared/ingredient.model';\nimport { Recipe } from './recipe.model';\nimport * as ShoppingListActions from \"../shopping-list/store/shopping-list.actions\";\nimport * as fromApp from \"../store/app.reducer\";\n\n@Injectable()\nexport class RecipeService {\n  recipesChanged = new Subject<Recipe[]>();\n\n  // private recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Tasty Schnitzel',\n  //     'A super-tasty Schnitzel - just awesome!',\n  //     '../../../assets/pexels-photo-schnitzel.jpeg',\n  //     [\n  //       new Ingredient('Boneless pork chops', 2),\n  //       new Ingredient('All-purpose flour', 1/25),\n  //       new Ingredient('Garlic salt', 1),\n  //       new Ingredient('Paprika', 1/2),\n  //       new Ingredient('Black pepper', 1/2),\n  //       new Ingredient('Large eggs', 3),\n  //       new Ingredient('Panko bread crumbs', 2),\n  //       new Ingredient('Olive oil', 1),\n  //       new Ingredient('Lemon wedges', 3),\n  //       new Ingredient('French Fries', 20),\n  //       new Ingredient('Ketchup', 1),\n  //       new Ingredient('Marole', 1)\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Baked Salmon',\n  //     'Baked Salmon with Garlic is juicy and flaky, yum!',\n  //     '../../../assets/Baked-Salmon.jpg',\n  //     [\n  //       new Ingredient('1/2 lb salmon filet', 1),\n  //       new Ingredient('Fresh parsley, chopped', 2),\n  //       new Ingredient('Light olive oil', 2),\n  //       new Ingredient('Fresh lemon juice', 2),\n  //       new Ingredient('Garlic cloves, pressed', 3),\n  //       new Ingredient('Dijon mustard', 1/2),\n  //       new Ingredient('Sea salt', 1/2),\n  //       new Ingredient('Black pepper', 1/8),\n  //       new Ingredient('Lemon, sliced into 4 rings', 1/2),\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Big Fat Burger',\n  //     'What else you need to say?',\n  //     '../../../assets/pexels-photo-burger.jpeg',\n  //     [\n  //       new Ingredient('Ground beef', 2),\n  //       new Ingredient('Black Pepper', 1),\n  //       new Ingredient('Cheddar cheese', 4),\n  //       new Ingredient('Mayonnaise', 1/25),\n  //       new Ingredient('Yellow mustard', 1),\n  //       new Ingredient('Burger buns', 4),\n  //       new Ingredient('Iceberg lettuce', 2),\n  //       new Ingredient('Large tomato', 1),\n  //       new Ingredient('Red onion', 1/2),\n  //       new Ingredient('Dill Pickles', 2),\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Fish Taco',\n  //     'Don’t skip the best taco sauce – a garlic lime crema',\n  //     '../../../assets/Fish-Tacos.jpg',\n  //     [\n  //       new Ingredient('Small white corn tortillas', 24),\n  //       new Ingredient('Tilapia', 1),\n  //       new Ingredient('Ground cumin', 1/2),\n  //       new Ingredient('Cayenne pepper', 1/2),\n  //       new Ingredient('Salt', 1),\n  //       new Ingredient('Black pepper', 1/4),\n  //       new Ingredient('Olive oil', 1),\n  //       new Ingredient('Unsalted butter', 1),\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Easy Crepe',\n  //     'This blender crepe recipe couldn’t be easier',\n  //     '../../../assets/Crepe.jpg',\n  //     [\n  //       new Ingredient('Lukewarm water', 1/2),\n  //       new Ingredient('Warm milk', 1),\n  //       new Ingredient('Large eggs', 4),\n  //       new Ingredient('Unsalted butter, melted', 4),\n  //       new Ingredient('All-purpose flour', 1),\n  //       new Ingredient('Granulated sugar', 2),\n  //       new Ingredient('Sea salt', 1),\n  //     ]\n  //   ),\n\n  // ];\n\n  private recipes: Recipe[] = [];\n\n  constructor(\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  setRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  };\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number) {\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    this.store.dispatch(new ShoppingListActions.AddIngredients(ingredients));\n\n  }\n\n\n\n  /**\n   * @param  {Recipe} recipe\n   *\n   * * This is an important text\n   * ! Alert comment\n   * ? idk, some question\n   * TODO: remember this\n   *\n   *\n   * this is a link to other function, just hover over this funcName {@link getRecipe}\n   */\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { Recipe } from \"./recipe.model\";\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\nimport * as RecipesActions from '../recipes/store/recipe.actions';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { map, take, switchMap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\n\n@Injectable({providedIn: 'root'})\nexport class RecipesResolverService implements Resolve<Recipe[]> {\n  constructor (private store: Store<fromApp.AppState>, private actions$: Actions) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.store.select('recipes').pipe(\n      take(1),\n      map(recipesState => {\n      return recipesState.recipes;\n    }),\n    switchMap(recipes => {\n      if (recipes.length === 0) {\n        this.store.dispatch(new RecipesActions.FetchRecipes());\n        return this.actions$.pipe(\n          ofType(RecipesActions.SET_RECIPES),\n          take(1)\n        );\n      } else {\n        return of(recipes);\n      }\n    }));\n\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from \"@angular/core\";\nimport { AuthGuard } from '../auth/auth.guard';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipesResolverService } from './recipes-resolver.service';\nimport { RecipesComponent } from './recipes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipesComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', component: RecipeStartComponent },\n      { path: 'new', component: RecipeEditComponent },\n      { path: ':id', component: RecipeDetailComponent, resolve: [RecipesResolverService] },\n      { path: ':id/edit', component: RecipeEditComponent, resolve: [RecipesResolverService] }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecipesRoutingModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n  providers: [RecipeService]\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-recipe-list></app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n        <router-outlet></router-outlet>         \n    </div>\n</div>","import { SharedModule } from './../shared/shared.module';\nimport { RecipesRoutingModule } from './recipes-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from \"@angular/core\";\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\nimport { RecipesComponent } from \"./recipes.component\";\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    RecipeStartComponent,\n    RecipeEditComponent\n  ],\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    RecipesRoutingModule,\n    SharedModule\n  ],\n  exports: [\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    RecipeStartComponent,\n    RecipeEditComponent\n  ]\n})\nexport class RecipesModule {}\n"],"names":[],"sourceRoot":"webpack:///"}