{"version":3,"file":"674.js","mappings":"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","sources":["./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { PlaceholderDirective } from './../shared/placeholder/placeholder.directive';\nimport { AlertComponent } from './../shared/alert/alert.component';\nimport { NgForm } from '@angular/forms';\nimport {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from './store/auth.actions';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  isLoginMode: boolean = true;\n  isLoading: boolean = false;\n  error: string | null = null;\n  @ViewChild(PlaceholderDirective, { static: false })\n  alertHost: PlaceholderDirective;\n\n  private closeSub: Subscription;\n  private storeSub: Subscription;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.storeSub = this.store.select('auth').subscribe((authState) => {\n      this.isLoading = authState.loading;\n      this.error = authState.authError;\n      if (this.error) {\n        this.showErrorAlert(this.error);\n      }\n    });\n  }\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    if (this.isLoginMode) {\n      // var authObs = this.authService.login(email, password);\n      this.store.dispatch(\n        new AuthActions.LoginStart({ email: email, password: password })\n      );\n    } else {\n      // var authObs = this.authService.signup(email, password);\n      this.store.dispatch(\n        new AuthActions.SignupStart({ email: email, password: password })\n      );\n    }\n\n    // authObs.subscribe(\n    //     {\n    //       next: (resData) => {\n    //         console.log(resData);\n    //         this.isLoading = false;\n    //         this.router.navigate(['/recipes']);\n    //       },\n    //       error: (errorMessage) => {\n    //         console.log(errorMessage);\n    //         this.error = errorMessage;\n    //         this.showErrorAlert(errorMessage);\n    //         this.isLoading = false;\n    //       },\n    //     }\n    //   );\n\n    form.reset();\n  }\n\n  onHandleError() {\n    this.store.dispatch(new AuthActions.ClearError());\n  }\n\n  ngOnDestroy() {\n    if (this.closeSub) {\n      this.closeSub.unsubscribe();\n    }\n    if (this.storeSub) {\n      this.storeSub.unsubscribe();\n    }\n  }\n\n  private showErrorAlert(message: string) {\n    const alertCmpFactory =\n      this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\n    hostViewContainerRef.clear();\n\n    const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n\n    componentRef.instance.message = message;\n    this.closeSub = componentRef.instance.close.subscribe(() => {\n      this.closeSub.unsubscribe();\n      this.onHandleError();\n      hostViewContainerRef.clear();\n    });\n  }\n}\n","<ng-template appPlaceholder></ng-template>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n    <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\n      <p>{{ error }}</p>\n    </div> -->\n    <!-- <app-alert\n      [message]=\"error\"\n      *ngIf=\"error\"\n      (close)=\"onHandleError()\"\n    ></app-alert> -->\n    <div *ngIf=\"isLoading\" style=\"text-align: center\">\n      <app-loading-spinner></app-loading-spinner>\n    </div>\n    <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <label for=\"email\">E-Mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          ngModel\n          name=\"email\"\n          required\n          email\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          class=\"form-control\"\n          ngModel\n          name=\"password\"\n          required\n          minlength=\"6\"\n        />\n      </div>\n      <div>\n        <button\n          class=\"btn btn-primary\"\n          type=\"submit\"\n          [disabled]=\"!authForm.valid\"\n        >\n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        </button>\n        <button class=\"btn btn-primary\" type=\"button\" (click)=\"onSwitchMode()\">\n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SharedModule } from './../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { AuthComponent } from \"./auth.component\";\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      { path: '', component: AuthComponent}\n    ]),\n    SharedModule\n  ]\n})\nexport class AuthModule {}\n"],"names":[],"sourceRoot":"webpack:///"}